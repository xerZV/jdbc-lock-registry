spring:
  datasource:
    url: jdbc:h2:file:./db/lockregistry
    driverClassName: org.h2.Driver
    username: lock
    password: registry
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        default-schema: public
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: update
  liquibase:
    enabled: true
    default-schema: public
    change-log: classpath:db/changelog/db.changelog-master.yaml

app:
  queue:
    lock:
      region: ORDER_QUEUE
      timeToLive: 30m # Specify the time to expire dead locks
      timeToWait: 30s # The maximum time to wait for acquiring lock
    execution:
      rate: 1m # Specify the rate of queue process method execution
      cron: 0 * * ? * * MON-FRI # You can use cron instead of rate if you need advanced scheduling logic
      enabled: true # If false the scheduled queue method will not do anything
      batchSize: 10 # How many queued trades to be fetched per execution
    release-date:
      time: 07:00 # In format 'hour:minutes' - the hour from 0 to 23, the minutes from 0 to 59
      zone: CET # Should be string which represents java.time.ZoneId, e.g CET, EST, etc
      cutoffDateOffset: 1 # days offset when calculating the releaseDate based on cutoffDate trades

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
